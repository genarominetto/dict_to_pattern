{% set component_import_path = root_module + component_name_snake + '.components.' %}
{% set composite_import_path = component_import_path + 'composite.' + composite_name_snake %}
{% set leaves_import_path = component_import_path + 'leaves.' %}

from {{ composite_import_path }} import {{ composite_name }}
{% for leaf, leaf_snake in zip(leaves, leaves_snake) %}
from {{ leaves_import_path }}{{ leaf_snake }} import {{ leaf }}
{% endfor %}

if __name__ == "__main__":
    {% for leaf, leaf_snake in zip(leaves, leaves_snake) %}
    {{ leaf_snake }}1 = {{ leaf }}(name="{{ leaf }}1"{% for prop in leaf_properties %}, {{ prop.name }}={{ prop.value }}{% endfor %})
    {{ leaf_snake }}2 = {{ leaf }}(name="{{ leaf }}2"{% for prop in leaf_properties %}, {{ prop.name }}={{ prop.value }}{% endfor %})
    {% endfor %}
    
    {{ composite_name_snake }}1 = {{ composite_name }}(name="{{ composite_name }}1")
    {{ composite_name_snake }}2 = {{ composite_name }}(name="{{ composite_name }}2")

    {% for leaf, leaf_snake in zip(leaves, leaves_snake) %}
    {{ composite_name_snake }}1.add({{ leaf_snake }}1)
    {% endfor %}
    {% for leaf, leaf_snake in zip(leaves, leaves_snake) %}
    {{ composite_name_snake }}2.add({{ leaf_snake }}2)
    {% endfor %}

    {{ composite_name_snake }}1.remove({{ leaves_snake[0] }}1)

    {{ composite_name_snake }}1.add({{ composite_name_snake }}2)
    
    def get_{{ component_name_snake }}_name({{ component_name_snake }}):
        return {{ component_name_snake }}.name
    
    {{ leaves_snake[0] }}_names = {{ composite_name_snake }}1.execute_operation_recursively(
        operation_func=get_{{ component_name_snake }}_name,
        condition_func=isinstance,
        condition_args=({{ leaves[0] }},)
    )
    depth = {{ composite_name_snake }}1.calculate_depth()
    
    print({{ composite_name_snake }}1)
    print(f"Is {{ composite_name_snake }}1 composite? {{ '{' }}{{ composite_name_snake }}1.is_composite(){{ '}' }})")
    {% for prop in leaf_properties %}
        {% if prop.name.startswith('is_') %}
    print(f"Are there {{ prop.name[3:].replace('_', ' ') }} elements within {{ composite_name_snake }}1? {{ '{' }}{{ composite_name_snake }}1.any_{{ prop.name[3:] }}(){{ '}' }})")
        {% else %}
    print(f"Property '{{ prop.name }}' value in {{ composite_name_snake }}1: {{ '{' }}{{ composite_name_snake }}1.{{ prop.name }}{{ '}' }})")
        {% endif %}
    {% endfor %}
    print(f"{{ composite_name }}1 ID: {{ '{' }}{{ composite_name_snake }}1.id{{ '}' }})")
    print(f"Number of children in {{ composite_name_snake }}1: {{ '{' }}len({{ composite_name_snake }}1.get_children()){{ '}' }})")
    print(f"{{ leaves[0] }} names in {{ composite_name_snake }}1: {{ '{' }}{{ leaves_snake[0] }}_names{{ '}' }})")
    print(f"Depth of {{ composite_name_snake }}1 hierarchy: {{ '{' }}depth{{ '}' }})")
